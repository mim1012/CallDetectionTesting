// Generated by view binder compiler. Do not edit!
package com.kakao.taxi.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.LinearLayout;
import android.widget.Spinner;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kakao.taxi.test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLogViewerBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final CheckBox autoScrollCheckBox;

  @NonNull
  public final Button clearButton;

  @NonNull
  public final Spinner filterSpinner;

  @NonNull
  public final TextView logTextView;

  @NonNull
  public final Button pauseButton;

  @NonNull
  public final Button refreshButton;

  @NonNull
  public final TextView statusTextView;

  private ActivityLogViewerBinding(@NonNull LinearLayout rootView,
      @NonNull CheckBox autoScrollCheckBox, @NonNull Button clearButton,
      @NonNull Spinner filterSpinner, @NonNull TextView logTextView, @NonNull Button pauseButton,
      @NonNull Button refreshButton, @NonNull TextView statusTextView) {
    this.rootView = rootView;
    this.autoScrollCheckBox = autoScrollCheckBox;
    this.clearButton = clearButton;
    this.filterSpinner = filterSpinner;
    this.logTextView = logTextView;
    this.pauseButton = pauseButton;
    this.refreshButton = refreshButton;
    this.statusTextView = statusTextView;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLogViewerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLogViewerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_log_viewer, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLogViewerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.autoScrollCheckBox;
      CheckBox autoScrollCheckBox = ViewBindings.findChildViewById(rootView, id);
      if (autoScrollCheckBox == null) {
        break missingId;
      }

      id = R.id.clearButton;
      Button clearButton = ViewBindings.findChildViewById(rootView, id);
      if (clearButton == null) {
        break missingId;
      }

      id = R.id.filterSpinner;
      Spinner filterSpinner = ViewBindings.findChildViewById(rootView, id);
      if (filterSpinner == null) {
        break missingId;
      }

      id = R.id.logTextView;
      TextView logTextView = ViewBindings.findChildViewById(rootView, id);
      if (logTextView == null) {
        break missingId;
      }

      id = R.id.pauseButton;
      Button pauseButton = ViewBindings.findChildViewById(rootView, id);
      if (pauseButton == null) {
        break missingId;
      }

      id = R.id.refreshButton;
      Button refreshButton = ViewBindings.findChildViewById(rootView, id);
      if (refreshButton == null) {
        break missingId;
      }

      id = R.id.statusTextView;
      TextView statusTextView = ViewBindings.findChildViewById(rootView, id);
      if (statusTextView == null) {
        break missingId;
      }

      return new ActivityLogViewerBinding((LinearLayout) rootView, autoScrollCheckBox, clearButton,
          filterSpinner, logTextView, pauseButton, refreshButton, statusTextView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
