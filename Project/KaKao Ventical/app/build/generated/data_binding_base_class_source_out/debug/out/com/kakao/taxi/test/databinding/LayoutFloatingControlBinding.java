// Generated by view binder compiler. Do not edit!
package com.kakao.taxi.test.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageButton;
import android.widget.LinearLayout;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kakao.taxi.test.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class LayoutFloatingControlBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageButton btnClose;

  @NonNull
  public final ImageButton btnStartDetection;

  @NonNull
  public final ImageButton btnStopDetection;

  @NonNull
  public final ImageButton btnTestClick;

  @NonNull
  public final ImageButton btnTestOcr;

  @NonNull
  public final ImageButton btnTestTemplate;

  @NonNull
  public final ImageButton collapsedView;

  @NonNull
  public final LinearLayout expandedView;

  private LayoutFloatingControlBinding(@NonNull FrameLayout rootView, @NonNull ImageButton btnClose,
      @NonNull ImageButton btnStartDetection, @NonNull ImageButton btnStopDetection,
      @NonNull ImageButton btnTestClick, @NonNull ImageButton btnTestOcr,
      @NonNull ImageButton btnTestTemplate, @NonNull ImageButton collapsedView,
      @NonNull LinearLayout expandedView) {
    this.rootView = rootView;
    this.btnClose = btnClose;
    this.btnStartDetection = btnStartDetection;
    this.btnStopDetection = btnStopDetection;
    this.btnTestClick = btnTestClick;
    this.btnTestOcr = btnTestOcr;
    this.btnTestTemplate = btnTestTemplate;
    this.collapsedView = collapsedView;
    this.expandedView = expandedView;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static LayoutFloatingControlBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static LayoutFloatingControlBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.layout_floating_control, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static LayoutFloatingControlBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btn_close;
      ImageButton btnClose = ViewBindings.findChildViewById(rootView, id);
      if (btnClose == null) {
        break missingId;
      }

      id = R.id.btn_start_detection;
      ImageButton btnStartDetection = ViewBindings.findChildViewById(rootView, id);
      if (btnStartDetection == null) {
        break missingId;
      }

      id = R.id.btn_stop_detection;
      ImageButton btnStopDetection = ViewBindings.findChildViewById(rootView, id);
      if (btnStopDetection == null) {
        break missingId;
      }

      id = R.id.btn_test_click;
      ImageButton btnTestClick = ViewBindings.findChildViewById(rootView, id);
      if (btnTestClick == null) {
        break missingId;
      }

      id = R.id.btn_test_ocr;
      ImageButton btnTestOcr = ViewBindings.findChildViewById(rootView, id);
      if (btnTestOcr == null) {
        break missingId;
      }

      id = R.id.btn_test_template;
      ImageButton btnTestTemplate = ViewBindings.findChildViewById(rootView, id);
      if (btnTestTemplate == null) {
        break missingId;
      }

      id = R.id.collapsed_view;
      ImageButton collapsedView = ViewBindings.findChildViewById(rootView, id);
      if (collapsedView == null) {
        break missingId;
      }

      id = R.id.expanded_view;
      LinearLayout expandedView = ViewBindings.findChildViewById(rootView, id);
      if (expandedView == null) {
        break missingId;
      }

      return new LayoutFloatingControlBinding((FrameLayout) rootView, btnClose, btnStartDetection,
          btnStopDetection, btnTestClick, btnTestOcr, btnTestTemplate, collapsedView, expandedView);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
